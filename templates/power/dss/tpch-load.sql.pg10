set default_statistics_target = 1000;

BEGIN;

  CREATE TABLE PART (

    P_PARTKEY    INT8,
    P_NAME      VARCHAR(55),
    P_MFGR      CHAR(25),
    P_BRAND      CHAR(10),
    P_TYPE      VARCHAR(25),
    P_SIZE      INTEGER,
    P_CONTAINER    CHAR(10),
    P_RETAILPRICE  FLOAT8,
    P_COMMENT    VARCHAR(23)
  ) with (autovacuum_enabled=off , toast.autovacuum_enabled=off);

  alter table part set (parallel_workers =64);

  COPY part FROM '/tmp/dss-data/part.csv' WITH csv DELIMITER '|';

  create index idx_part_1 on part (p_partkey);

COMMIT;

BEGIN;

  CREATE TABLE REGION (
    R_REGIONKEY  INT8,
    R_NAME    CHAR(25),
    R_COMMENT  VARCHAR(152)
  ) with (autovacuum_enabled=off , toast.autovacuum_enabled=off);

  COPY region FROM '/tmp/dss-data/region.csv' WITH (FORMAT csv, DELIMITER '|');

  create index idx_region_1 on region (r_regionkey);
  create index idx_region_2 on region (r_name);

COMMIT;

BEGIN;

  CREATE TABLE NATION (
    N_NATIONKEY    INT8,
    N_NAME      CHAR(25),
    N_REGIONKEY    BIGINT NOT NULL,  -- references R_REGIONKEY
    N_COMMENT    VARCHAR(152)
  ) with (autovacuum_enabled=off , toast.autovacuum_enabled=off);

  COPY nation FROM '/tmp/dss-data/nation.csv' WITH (FORMAT csv, DELIMITER '|');

  create index idx_NATION_1 on NATION (n_nationkey);
  create index idx_NATION_2 on NATION (n_name);

COMMIT;

BEGIN;

  CREATE TABLE SUPPLIER (
    S_SUPPKEY    INT8,
    S_NAME      CHAR(25),
    S_ADDRESS    VARCHAR(40),
    S_NATIONKEY    BIGINT NOT NULL, -- references N_NATIONKEY
    S_PHONE      CHAR(15),
    S_ACCTBAL    FLOAT8,
    S_COMMENT    VARCHAR(101)
  ) with (autovacuum_enabled=off , toast.autovacuum_enabled=off);
  
  alter table SUPPLIER set (parallel_workers =64);

  COPY supplier FROM '/tmp/dss-data/supplier.csv' WITH (FORMAT csv, DELIMITER '|');

  create index idx_SUPPLIER_1 on SUPPLIER (s_name);
  create index idx_SUPPLIER_2 on SUPPLIER (s_suppkey);

COMMIT;

BEGIN;

  CREATE TABLE CUSTOMER (
    C_CUSTKEY    INT8,
    C_NAME      VARCHAR(25),
    C_ADDRESS    VARCHAR(40),
    C_NATIONKEY    BIGINT NOT NULL, -- references N_NATIONKEY
    C_PHONE      CHAR(15),
    C_ACCTBAL    FLOAT8,
    C_MKTSEGMENT  CHAR(10),
    C_COMMENT    VARCHAR(117)
  ) with (autovacuum_enabled=off , toast.autovacuum_enabled=off);

  alter table CUSTOMER set (parallel_workers =64);

  COPY customer FROM '/tmp/dss-data/customer.csv' WITH (FORMAT csv, DELIMITER '|');

  create index idx_CUSTOMER_1 on CUSTOMER (c_custkey);
  create index idx_CUSTOMER_2 on CUSTOMER (c_name);

COMMIT;

BEGIN;

  CREATE TABLE PARTSUPP (
    PS_PARTKEY    BIGINT NOT NULL, -- references P_PARTKEY
    PS_SUPPKEY    BIGINT NOT NULL, -- references S_SUPPKEY
    PS_AVAILQTY    INTEGER,
    PS_SUPPLYCOST  FLOAT8,
    PS_COMMENT    VARCHAR(199)
  ) with (autovacuum_enabled=off , toast.autovacuum_enabled=off);

  alter table PARTSUPP set (parallel_workers =64);

  COPY partsupp FROM '/tmp/dss-data/partsupp.csv' WITH (FORMAT csv, DELIMITER '|');

  create index idx_PARTSUPP_1 on PARTSUPP (ps_partkey);

COMMIT;

BEGIN;

  CREATE temp TABLE tmp_ORDERS (
    O_ORDERKEY  INT8,
    O_CUSTKEY  BIGINT NOT NULL, -- references C_CUSTKEY
    O_ORDERSTATUS  CHAR(1),
    O_TOTALPRICE  FLOAT8,
    O_ORDERDATE  DATE,
    O_ORDERPRIORITY  CHAR(15),
    O_CLERK  CHAR(15),
    O_SHIPPRIORITY  INTEGER,
    O_COMMENT  VARCHAR(79)
  ) with (autovacuum_enabled=off , toast.autovacuum_enabled=off) ;

  CREATE TABLE ORDERS (
    O_ORDERKEY  INT8,
    O_CUSTKEY  BIGINT NOT NULL, -- references C_CUSTKEY
    O_ORDERSTATUS  CHAR(1),
    O_TOTALPRICE  FLOAT8,
    O_ORDERDATE  DATE,
    O_ORDERPRIORITY  CHAR(15),
    O_CLERK  CHAR(15),
    O_SHIPPRIORITY  INTEGER,
    O_COMMENT  VARCHAR(79)
  ) with (autovacuum_enabled=off , toast.autovacuum_enabled=off) ;

  alter table ORDERS set (parallel_workers =64);

  COPY tmp_orders FROM '/tmp/dss-data/orders.csv' WITH (FORMAT csv, DELIMITER '|');

  insert into ORDERS select * from tmp_ORDERS order by O_ORDERDATE, o_orderstatus;

  drop table tmp_ORDERS;

  create index idx_ORDERS_1 on ORDERS using brin (o_orderstatus);
  create index idx_ORDERS_2 on ORDERS using brin (o_orderdate);
  create index idx_ORDERS_3 on ORDERS (o_orderkey);
  create index idx_ORDERS_4 on ORDERS (o_orderkey) WHERE o_orderstatus = 'F';
  create index idx_ORDERS_5 on ORDERS (o_orderkey) WHERE o_orderstatus = 'O';
  create index idx_ORDERS_6 on ORDERS (o_orderkey) WHERE o_orderstatus = 'P';


/*
  CREATE TABLE ORDERS (
    O_ORDERKEY  INT8,
    O_CUSTKEY  BIGINT NOT NULL, -- references C_CUSTKEY
    O_ORDERSTATUS  CHAR(1),
    O_TOTALPRICE  FLOAT8,
    O_ORDERDATE  DATE,
    O_ORDERPRIORITY  CHAR(15),
    O_CLERK  CHAR(15),
    O_SHIPPRIORITY  INTEGER,
    O_COMMENT  VARCHAR(79)
  ) PARTITION BY RANGE (O_ORDERDATE);

  do language plpgsql $$
  declare
    x date := '1992-01-01';
  begin
    for s in 0..83 loop 
      execute 'CREATE TABLE ORDERS_ptr_'||s||' PARTITION OF ORDERS FOR VALUES FROM ('''||date(x+((s)||' month')::interval)||''') TO ('''||date(x+((s+1)||' month')::interval)||''')';
    end loop;
  end;
  $$;
*/
  
/* 
  -- partition table do not support index now.

  ALTER TABLE ORDERS ADD PRIMARY KEY (O_ORDERKEY);
  CREATE INDEX IDX_ORDERS_CUSTKEY ON ORDERS (O_CUSTKEY);
  CREATE INDEX IDX_ORDERS_ORDERDATE ON ORDERS (O_ORDERDATE);
*/
  
COMMIT;

BEGIN;

  CREATE temp TABLE tmp_LINEITEM (
    L_ORDERKEY BIGINT NOT NULL, -- references O_ORDERKEY
    L_PARTKEY BIGINT NOT NULL, -- references P_PARTKEY (compound fk to PARTSUPP)
    L_SUPPKEY BIGINT NOT NULL, -- references S_SUPPKEY (compound fk to PARTSUPP)
    L_LINENUMBER INTEGER,
    L_QUANTITY FLOAT8,
    L_EXTENDEDPRICE FLOAT8,
    L_DISCOUNT FLOAT8,
    L_TAX FLOAT8,
    L_RETURNFLAG CHAR(1),
    L_LINESTATUS CHAR(1),
    L_SHIPDATE DATE,
    L_COMMITDATE  DATE,
    L_RECEIPTDATE  DATE,
    L_SHIPINSTRUCT  CHAR(25),
    L_SHIPMODE    CHAR(10),
    L_COMMENT    VARCHAR(44)
  ) with (autovacuum_enabled=off , toast.autovacuum_enabled=off);

  CREATE TABLE LINEITEM (
    L_ORDERKEY BIGINT NOT NULL, -- references O_ORDERKEY
    L_PARTKEY BIGINT NOT NULL, -- references P_PARTKEY (compound fk to PARTSUPP)
    L_SUPPKEY BIGINT NOT NULL, -- references S_SUPPKEY (compound fk to PARTSUPP)
    L_LINENUMBER INTEGER,
    L_QUANTITY FLOAT8,
    L_EXTENDEDPRICE FLOAT8,
    L_DISCOUNT FLOAT8,
    L_TAX FLOAT8,
    L_RETURNFLAG CHAR(1),
    L_LINESTATUS CHAR(1),
    L_SHIPDATE DATE,
    L_COMMITDATE  DATE,
    L_RECEIPTDATE  DATE,
    L_SHIPINSTRUCT  CHAR(25),
    L_SHIPMODE    CHAR(10),
    L_COMMENT    VARCHAR(44)
  ) with (autovacuum_enabled=off , toast.autovacuum_enabled=off);

  alter table LINEITEM set (parallel_workers =64);

  COPY lineitem FROM '/tmp/dss-data/lineitem.csv' WITH (FORMAT csv, DELIMITER '|');


  insert into LINEITEM select * from tmp_LINEITEM order by l_shipdate;

  drop table tmp_LINEITEM;

  create index idx_LINEITEM_1 on LINEITEM using brin (l_shipdate);
  create index idx_LINEITEM_2 on LINEITEM (l_orderkey);


/*

  CREATE TABLE LINEITEM (
    L_ORDERKEY BIGINT NOT NULL, -- references O_ORDERKEY
    L_PARTKEY BIGINT NOT NULL, -- references P_PARTKEY (compound fk to PARTSUPP)
    L_SUPPKEY BIGINT NOT NULL, -- references S_SUPPKEY (compound fk to PARTSUPP)
    L_LINENUMBER INTEGER,
    L_QUANTITY FLOAT8,
    L_EXTENDEDPRICE FLOAT8,
    L_DISCOUNT FLOAT8,
    L_TAX FLOAT8,
    L_RETURNFLAG CHAR(1),
    L_LINESTATUS CHAR(1),
    L_SHIPDATE DATE,
    L_COMMITDATE  DATE,
    L_RECEIPTDATE  DATE,
    L_SHIPINSTRUCT  CHAR(25),
    L_SHIPMODE    CHAR(10),
    L_COMMENT    VARCHAR(44)
  ) PARTITION BY RANGE (L_SHIPDATE);
  
  do language plpgsql $$
  declare
    x date := '1992-01-01';
  begin
    for s in 0..83 loop 
      execute 'CREATE TABLE LINEITEM_ptr_'||s||' PARTITION OF LINEITEM FOR VALUES FROM ('''||date(x+((s)||' month')::interval)||''') TO ('''||date(x+((s+1)||' month')::interval)||''')';
    end loop;
  end;
  $$;
  
*/

/* 
  -- partition table do not support index now.

  ALTER TABLE LINEITEM ADD PRIMARY KEY (L_ORDERKEY, L_LINENUMBER);
  CREATE INDEX IDX_LINEITEM_ORDERKEY ON LINEITEM (L_ORDERKEY);
  CREATE INDEX IDX_LINEITEM_PART_SUPP ON LINEITEM (L_PARTKEY,L_SUPPKEY);
  CREATE INDEX IDX_LINEITEM_SHIPDATE ON LINEITEM (L_SHIPDATE, L_DISCOUNT, L_QUANTITY);
*/

COMMIT;
